<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping\ClassMetadata;

/**
 * CustomerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CustomerRepository extends \Doctrine\ORM\EntityRepository
{
    public function findJoinedCustomerByName($name)
    {
        return $this
            ->createQueryBuilder('c')
            ->addSelect('o')
            ->addSelect('l')
            ->join('c.orders', 'o')
            ->join('o.lineItems', 'l')
            ->where('c.name = :name')
            ->setParameter('name', $name)
            ->getQuery()
            ->getOneOrNullResult()
        ;
    }

    public function findEagerCustomerByName($name)
    {
        return $this
            ->changeFetchMode(ClassMetadata::FETCH_EAGER)
            ->findOneByName($name);
        ;
    }

    public function findLazyCustomerByName($name)
    {
        return $this
            // 未定義の場合、デフォルトは FETCH_LAZY
            //->changeFetchMode(ClassMetadata::FETCH_LAZY)
            ->findOneByName($name)
        ;
    }

    public function findExtraLazyCustomerByName($name)
    {
        return $this
            ->changeFetchMode(ClassMetadata::FETCH_EXTRA_LAZY)
            ->findOneByName($name)
        ;
    }

    /**
     * フェッチモードを動的に切り替える
     * 通常、アノテーションやYAMLなどで fetch="EAGER" などど設定するが、
     * テスト用途で動的に切り替えたいがために定義
     */
    protected function changeFetchMode($fetchMode)
    {
        // Customer::$orders
        $this
            ->getClassMetadata()
            ->associationMappings['orders']['fetch'] = $fetchMode
        ;

        // Order::$lineItems
        $this->getEntityManager()
            ->getClassMetadata(Order::class)
            ->associationMappings['lineItems']['fetch'] = $fetchMode;

        return $this;
    }
}
